<mde:MaterialWindow x:Class="RemoteDesktopWPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"         
        mc:Ignorable="d" 
        xmlns:prism="http://prismlibrary.com/"
        xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        xmlns:model="clr-namespace:MaterialDesignExtensions.Model;assembly=MaterialDesignExtensions"        
        xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DesignHeight="231" d:DesignWidth="274" 
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" Height="350" Width="525">

    <i:Interaction.Triggers>
        <i:EventTrigger>
            <prism:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <mde:MaterialWindow.Resources>
        <Style x:Key="AccentCircleButtonStyle"
                BasedOn="{StaticResource MaterialDesignFloatingActionLightButton}"
                TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
            <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5 0 5 0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                    <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </mde:MaterialWindow.Resources>

    <wpf:DialogHost Identifier="RootDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <mde:AppBar ShowShadow="True">
            </mde:AppBar>
            <!--상단메뉴-->
            <StackPanel Orientation="Horizontal" Margin="8">
                <Button ToolTip="연결" Command="{Binding CmdMenu}" CommandParameter="Connect" Style="{StaticResource AccentCircleButtonStyle}">
                    <wpf:PackIcon Kind="MonitorMultiple"/>
                </Button>
                <Border Background="White" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1" Height="25" Margin="5 0 5 0"/>
                <Button ToolTip="끊기" Command="{Binding CmdMenu}" CommandParameter="Disconnect" Style="{StaticResource AccentCircleButtonStyle}">
                    <wpf:PackIcon Kind="MonitorOff"/>
                </Button>
                <Border Background="White" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1" Height="25" Margin="5 0 5 0"/>
                <Button ToolTip="추가" Command="{Binding CmdMenu}" CommandParameter="Add" Style="{StaticResource AccentCircleButtonStyle}">
                    <wpf:PackIcon Kind="DatabasePlus"/>
                </Button>
                <Border Background="White" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1" Height="25" Margin="5 0 5 0"/>
                <Button ToolTip="수정" Command="{Binding CmdMenu}" CommandParameter="Edit" Style="{StaticResource AccentCircleButtonStyle}">
                    <wpf:PackIcon Kind="DatabaseEdit"/>
                </Button>
                <Border Background="White" BorderBrush="{DynamicResource PrimaryHueLightBrush}" BorderThickness="1" Height="25" Margin="5 0 5 0"/>
                <Button ToolTip="삭제" Command="{Binding CmdMenu}" CommandParameter="Delete" Style="{StaticResource AccentCircleButtonStyle}">
                    <wpf:PackIcon Kind="DatabaseRemove"/>
                </Button>
            </StackPanel>
            <!--본문-->
            <DataGrid x:Name="xGrid" Grid.Row="1" BorderThickness="1" Margin="3"
                      ItemsSource="{Binding HostList}" 
                      SelectedItem="{Binding SelectedHost}"
                      IsReadOnly="True" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <CheckBox Name="xCheckedAll"/>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate >
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn Header="컴퓨터(IP)"  Binding="{Binding Server}" />
                    <DataGridTextColumn Header="계정"  Binding="{Binding UserName}"/>
                    <DataGridTextColumn Header="비밀번호"  Binding="{Binding ClearTextPassword}"/>
                    <DataGridTextColumn Header="색품질"  Binding="{Binding ColorDepth}"/>
                    <DataGridTextColumn Header="설명"  Binding="{Binding Description}"/>
                </DataGrid.Columns>
            </DataGrid>
            <!--하단상태-->
            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Label Content="{Binding Status}"/>
            </StackPanel>
        </Grid>
    </wpf:DialogHost>
</mde:MaterialWindow>
